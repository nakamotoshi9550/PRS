# protools/abhack/customTabCompletion.ofMine.txt is a list of custom aliases to extend the 
# standard aliases defined in protools/abhack/customTabCompletion.txt 
# 
# This new file introduced on 24-MAR-2007 will help to keep your own aliases when 
# applying a new release of ABHack with possible changes in the standard 
# protools/abhack/customTabCompletion.txt 
# 
# 
# Lines that begins with '#' are ignored 
# This file is reloaded each time you recheck the '&Custom completion' toggle-box 
# One can define aliases for the matches operator 
# ~n => insert carriage return 
# %\d  => date in your *own* format (European, or American) => better than with VSlick 
# %\c put the cursor there  /* 18-DEC-2006 sla: Improvement: %\c now work for aliases that insert multiple lines */ 
# %\( will make ABHack insert a '(' in such a way it can guess where to put the matching ')' 
# ttEdt => to be replaced by the next chosen buffer in a popup list  /* 17-FEB-2007 sla: new buffer directive */ 
# 
# Example to disable a standard alias 
lirtn @dislabledAlias@ 
# Example to abort the completion process for a given word 
blockCompletion @abortCompletionProcess@ 
# 
# To implement your own, have a look at the standard protools/abhack/customTabCompletion.txt 
# 
 
  
# Do not forget to put a carriage return at the end of the file

# JukeBox Aliases
seta DYNAMIC-FUNCTION("setAttribute",h%\c,"","").
geta DYNAMIC-FUNCTION("getAttribute",h%\c,"")
dyna DYNAMIC-FUNCTION("%\c").
col DYNAMIC-FUNCTION("CreateObjectLink",h%\c,h).
dol DYNAMIC-FUNCTION("DeleteObjectLink",hBrowse,hTabQuery).
sco DYNAMIC-FUNCTION("setCurrentObject",h%\c).
gco DYNAMIC-FUNCTION("getCurrentObject")
gbc DYNAMIC-FUNCTION("getBrowseColumn",hBrowse,"%\c").
gpq hTabQuery = DYNAMIC-FUNCTION("getPageQuery" IN hTabFolder,iCurrTab).
cpl DYNAMIC-FUNCTION("CreateParentLink",h%\c,hParent,"key1[;parent-key1],key2..").
coo DYNAMIC-FUNCTION("CreateOneToOneLink",h%\c,hParent,"key1,key2..").
nbr hBrowse = DYNAMIC-FUNCTION("NewBrowse"~n,rect%\c:HANDLE~n,100~n,""~n,"buffer"~n + ";field"~n,"WHERE false"~n,"").
cal + ";+OrderTotal|DECIMAL|->><>>><>>9.99|CustOrderTotal(CustNum)|Order Total"
nqu hQuery = DYNAMIC-FUNCTION("NewQuery"~n,100~n,""~n,"buffer"~n + ";field"~n,"WHERE ..."~n,"").
nfm hFieldMap = DYNAMIC-FUNCTION("NewFieldMap"~n,hBrowse:QUERY~n,FRAME {&FRAME-NAME}:HANDLE~n,"%\cupdfld1,updfld2..",""~n,"dispfld1,dispfld2..",""~n,"").
ntb hToolbar = DYNAMIC-FUNCTION("NewToolBar"~n,rectTb%\c:HANDLE~n,"Fil"~n,"new;Ny,copy;Kopier,undo;Angre,delete;Slett,save;Lagre,excel;Eksporter til E&xcel"~n,"maxborder").
atb DYNAMIC-FUNCTION("AppendToolBar"~n,hToolbar,"Fil"~n,"FlatView,www,note"~n,"").
ntbe hToolbar = DYNAMIC-FUNCTION("NewToolBar"~n,rectTb%\c:HANDLE~n,"File"~n,"new,edit,copy,undo,delete,save"~n,"maxborder").
ntbc hToolbar = DYNAMIC-FUNCTION("NewToolBar"~n,rectTb%\c:HANDLE~n,"File"~n,"new,edit,copy,undo,delete,save,filter,excel"~n,"maxborder").
ntbbe hToolbar = DYNAMIC-FUNCTION("NewToolBar"~n,rectTb%\c:HANDLE~n,"File"~n,"browseConfig;Column setup,filter,accum;Accumulate,excel,rule,first,prev,next,last"~n,"maxborder").
nmb DYNAMIC-FUNCTION("NewMenuBand",hBrowse~n,"MultiSortBrowse;Sorter på flere kolonner"~n,"").
nmbe DYNAMIC-FUNCTION("NewMenuBand",hBrowse~n,"MultiSortBrowse;Sort on multiple columns"~n,"").
nbs hSearchField = DYNAMIC-FUNCTION("NewBrowseSearchField",RectBrowseSearch:HANDLE,hBrowse,1).~nDYNAMIC-FUNCTION("createObjectLink",hBrowse,hSearchField).
nbf hOverlay  = DYNAMIC-FUNCTION("NewBrowseFillIn",hBrowse,"%\cbrowse col.name","buffer col.name"~n,"lookup table;field1;field2;..","WHERE false","return field"~n,"").
nbt hOverlay  = DYNAMIC-FUNCTION("NewBrowseToggle",hBrowse,"%\cbrowse col.name","buffer col.name","").
nvi hViewer = DYNAMIC-FUNCTION("NewViewer"~n,rect%\c:HANDLE~n,hBrowse~n,"wView.w").
nco   DYNAMIC-FUNCTION("NewObject",THIS-PROCEDURE:CURRENT-WINDOW,THIS-PROCEDURE,"container").
npr   DYNAMIC-FUNCTION("NewObject",THIS-PROCEDURE:CURRENT-WINDOW,THIS-PROCEDURE,"procedure").
covl DYNAMIC-FUNCTION("CreateOverlayLink",hBrowse,hOverlay,"browse col.name").
nbd hDropDown = DYNAMIC-FUNCTION("NewBrowseDropDown",hBrowse,"%\cbrowse col.name","buffer col.name"~n,"dropdown table;field1;field2;..","WHERE true/alt.value list"~n,""). 
glo DYNAMIC-FUNCTION("GetLinkedObject",h%\h,"obj.type","from/to").
flo D-F("setAtt",hBrowse,"filterlookupfields_%\c","b&f").~nD-F("setAtt",hBrowse,"filterlookupquery_fld","qry").~nD-F("setAtt",hBrowse,"filterlookupreturnfield_Salesrep","fld").
dom DYNAMIC-FUNCTION("DoMessage",MsgNum,Type 0:OK/1 1:Ok/1-Ca/2 2:Ab/3-Re/4-Ig/5 3:Y/6-N/7-Can/2 4:Y/6-N/7 5:Re/4-Ca/2 6:Ca/2-Ret/10-Cnt/11 20:Npad~n,"Msgtxt","Title","subst")
idf DYNAMIC-FUNCTION("InitDynFilter",hBrowseOrQuery,"field1,field2..","operator1,oper..","value1|value2..","try/noexec(opt)").
psr DYNAMIC-FUNCTION("ProcessSelectedRows",hBrowse,"<server_progname.p>",paramstring)
prq DYNAMIC-FUNCTION("ProcessQuery",hBrowse,"<server_progname.p>",paramstring)
low DYNAMIC-FUNCTION("DoLockWindow",THIS-PROCEDURE:CURRENT-WINDOW).
ukwl DYNAMIC-FUNCTION("setAttribute",SESSION,"userkeepswindowlocked","yes").
sss DYNAMIC-FUNCTION("setSortString",hBrowse,"field1;[desc],field2..").
ncs DYNAMIC-FUNCTION("setNoColumnSort",hBrowse,"col-name1,col-name2..").
inm RUN InvokeMethod(h%\c,"MethodName").
gts DYNAMIC-FUNCTION("getToolbarState",hToolbar)
rer DYNAMIC-FUNCTION("RefreshRowids",hQueryObject,"RowIdent1,rowid..").
afv RUN JBoxAskForValue.w ("<message>","<datatype>|<format>|<opt:init.val>",INPUT-OUTPUT <char_var>,OUTPUT iReturn).~nIF iReturn = 2 THEN DO: ~nEND.  
sis RUN JBoxDSimpleSelectList.w ("<list>",<posWidget>,OUTPUT cReturn).
bmu RUN JBoxBrowseMsgUpdateVal.w ("<msg>",~nhBrowse:NUM-SELECTED-ROWS,~nDyna("getA",hBrowse,"recordcount"),~n"<datatype>|<format>|<opt:init.val>",~nOUTPUT ocVal,~nOUTPUT iRet).
pbr IF iReturn = 2 THEN~n psr.~nELSE IF iReturn = 1 THEN DO:~n  IF prq THEN~n    RUN InvokeMethod(hBrowse,"OpenQuery").~nEND.
csb DYNAMIC-FUNCTION("CreateStatusBar",THIS-PROCEDURE:CURRENT-WINDOW,"",0,YES,?).
swd DYNAMIC-FUNCTION("setWebDoc","","<file-name>").
sed RUN JBoxDSmallEditor.w (INPUT-OUTPUT cText,<TITLE>,ReadOnly:YES/NO,OUTPUT bOk).
scw PUBLISH "StartChildWindow" ("<windowName.w>",<TITLE>,THIS-PROCEDURE,NO(NEW),OUTPUT <hWindowName>).~nASSIGN hViewer = DYNAMIC-FUNCTION("GetLinkedObject",<hWindowName>,"parent","to")~nhQuery   = DYNAMIC-FUNCTION("GetLinkedObject",hViewer,"query","from").
guf cFileName = DYNAMIC-FUNCTION("getUniqueFileName").
# DotNot aliases
wf WAIT-FOR System.Windows.Forms.Application:Run(oObj).
# Resize aliases
nrx DYNAMIC-FUNCTION("setNoResizeX", THIS-PROCEDURE:CURRENT-WINDOW, FRAME {&FRAME-NAME}:HANDLE,~n"ToolBar").
nry DYNAMIC-FUNCTION("setNoResizeY", THIS-PROCEDURE:CURRENT-WINDOW, FRAME {&FRAME-NAME}:HANDLE,~n"ToolBar").
arx DYNAMIC-FUNCTION("setAddResizeX", THIS-PROCEDURE:CURRENT-WINDOW, FRAME {&FRAME-NAME}:HANDLE,~n"field1,field2..").
ary DYNAMIC-FUNCTION("setAddResizeY", THIS-PROCEDURE:CURRENT-WINDOW, FRAME {&FRAME-NAME}:HANDLE,~n"field1,field2..").
amx DYNAMIC-FUNCTION("setAddMoveX", THIS-PROCEDURE:CURRENT-WINDOW, FRAME {&FRAME-NAME}:HANDLE,~n"field1,field2..").
amy DYNAMIC-FUNCTION("setAddMoveY", THIS-PROCEDURE:CURRENT-WINDOW, FRAME {&FRAME-NAME}:HANDLE,~n"field1,field2..").
nmx DYNAMIC-FUNCTION("setNoMoveX", THIS-PROCEDURE:CURRENT-WINDOW, FRAME {&FRAME-NAME}:HANDLE,~n"field1,field2..").
nmy DYNAMIC-FUNCTION("setNoMoveY", THIS-PROCEDURE:CURRENT-WINDOW, FRAME {&FRAME-NAME}:HANDLE,~n"field1,field2..").
sbx DYNAMIC-FUNCTION("setSplitBarX",THIS-PROCEDURE:CURRENT-WINDOW, btnSplitBarX:HANDLE IN FRAME frSplitBarX,NO).
sby DYNAMIC-FUNCTION("setSplitBarY",THIS-PROCEDURE:CURRENT-WINDOW, btnSplitBarY:HANDLE IN FRAME frSplitBarY,NO).
rxg DYNAMIC-FUNCTION("setResizeXGroup", THIS-PROCEDURE:CURRENT-WINDOW, FRAME {&FRAME-NAME}:HANDLE,%\percent,"field1,field2..").
ryg DYNAMIC-FUNCTION("setResizeYGroup", THIS-PROCEDURE:CURRENT-WINDOW, FRAME {&FRAME-NAME}:HANDLE,%\percent,"field1,field2..").
mxg DYNAMIC-FUNCTION("setMoveXGroup", THIS-PROCEDURE:CURRENT-WINDOW, FRAME {&FRAME-NAME}:HANDLE,%\percent,"field1,field2..").
myg DYNAMIC-FUNCTION("setMoveYGroup", THIS-PROCEDURE:CURRENT-WINDOW, FRAME {&FRAME-NAME}:HANDLE,%\percent,"field1,field2..").
fsbx DYNAMIC-FUNCTION("setFollowSplitBarX",THIS-PROCEDURE:CURRENT-WINDOW,btnSplitBarX:HANDLE IN FRAME frSplitBarX,~nSTRING(hBrowse1) + "," STRING(hBrowse2)). 
fsby DYNAMIC-FUNCTION("setFollowSplitBarY",THIS-PROCEDURE:CURRENT-WINDOW,btnSplitBarY:HANDLE IN FRAME frSplitBarY,~nSTRING(hBrowse1) + "," STRING(hBrowse2)). 
spyl DYNAMIC-FUNCTION("setSplitBarYlimits",btnSplitBarY:HANDLE IN FRAME {&FRAME-NAME},250,180).
ows DYNAMIC-FUNCTION("setOrgWinSize", THIS-PROCEDURE:CURRENT-WINDOW,MinXmove,MinYmove,0,0).
wir DYNAMIC-FUNCTION("setWidgetResize",THIS-PROCEDURE:CURRENT-WINDOW,THIS-PROCEDURE:CURRENT-WINDOW,"Resize","").
wra DYNAMIC-FUNCTION("setWidgetResize",FRAME {&FRAME-NAME}:FIRST-CHILD,THIS-PROCEDURE:CURRENT-WINDOW,"Adjust","").
# Appserver library aliases
gfl DYNAMIC-FUNCTION("getFieldList","buffer;field;field..,buffer2..","WHERE ").
gfv DYNAMIC-FUNCTION("getFieldValues","buffer","WHERE ","field1,field2..").
gau DYNAMIC-FUNCTION("getASuserId")
gul DYNAMIC-FUNCTION("getUserLevel")
gci DYNAMIC-FUNCTION("getCompanyId")
gcom DYNAMIC-FUNCTION("getCompany")
gcm DYNAMIC-FUNCTION("getCompany")
docre DYNAMIC-FUNCTION("DoCreate","buffer","validation",~n"field1,field2..",~nvalue1|value2..,~ncommit(YES/NO)).
doupd DYNAMIC-FUNCTION("DoUpdate","buffer","validation",~n"keyfield1,keyfield2.. OR blank",~nkeyvalue1,keyvalue2.. OR ROWID,~n"field1,field2..",~nvalue1|value2..,~ncommit(YES/NO)).
dodel DYNAMIC-FUNCTION("DoDelete","buffer","validation",~n"keyfield1,keyfield2.. OR blank",~nkeyvalue1,keyvalue2.. OR ROWID,~ncommit(YES/NO)).
gtm DYNAMIC-FUNCTION("getTransactionMessage").
rup DYNAMIC-FUNCTION("runProc","proc_name.p","parameter_string",tt-handle)
grr DYNAMIC-FUNCTION("getRunProcReturnTable",hBuffer)
gmt DYNAMIC-FUNCTION("getMyTempTable","proc_name.p",~n"parameter_string",hTargetBuffer).
gtt DYNAMIC-FUNCTION("getTempTable","proc_name.p | blank"~n,"parameter_string | table-name|querystring",hTargetBuffer).
gri DYNAMIC-FUNCTION("getRoleId")
gro DYNAMIC-FUNCTION("getRole")
# Server aliases
gva DYNAMIC-FUNCTION("getValue" IN SOURCE-PROCEDURE,"field")
sme RUN jbserv_domessage.p (iMsgNum,~n"Msgtxt",~n"Title","subst",~nicSessionId,~nOUTPUT ocReturn).
sal DYNAMIC-FUNCTION("startASlib" IN SOURCE-PROCEDURE).
gsc DYNAMIC-FUNCTION("getSessionContext")

