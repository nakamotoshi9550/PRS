%PDF-1.4
%ττττ
1 0 obj
<</Author (?)
/CreationDate (D:20031110101207-0800)
/Producer (?)
/Creator (?)
/Subject (?)
/Title (?)
/Keywords (?)
 >>
endobj
4 0 obj
<<
/Type /Encoding
/BaseEncoding /WinAnsiEncoding
>>
endobj
5 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F1
/Encoding 4 0 R
/BaseFont /Courier
>>
endobj
6 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F2
/Encoding 4 0 R
/BaseFont /Courier-Oblique
>>
endobj
7 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F3
/Encoding 4 0 R
/BaseFont /Courier-Bold
>>
endobj
8 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F4
/Encoding 4 0 R
/BaseFont /Courier-BoldOblique
>>
endobj
9 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F5
/Encoding 4 0 R
/BaseFont /Helvetica
>>
endobj
10 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F6
/Encoding 4 0 R
/BaseFont /Helvetica-Oblique
>>
endobj
11 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F7
/Encoding 4 0 R
/BaseFont /Helvetica-Bold
>>
endobj
12 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F8
/Encoding 4 0 R
/BaseFont /Helvetica-BoldOblique
>>
endobj
13 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F9
/Encoding 4 0 R
/BaseFont /Times-Roman
>>
endobj
14 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F10
/Encoding 4 0 R
/BaseFont /Times-Italic
>>
endobj
15 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F11
/Encoding 4 0 R
/BaseFont /Times-Bold
>>
endobj
16 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F12
/Encoding 4 0 R
/BaseFont /Times-BoldItalic
>>
endobj
17 0 obj
<<
  /Font <<  /F1 5 0 R /F2 6 0 R /F3 7 0 R /F4 8 0 R /F5 9 0 R /F6 10 0 R /F7 11 0 R /F8 12 0 R /F9 13 0 R /F10 14 0 R /F11 15 0 R /F12 16 0 R >>
  /ProcSet [ /PDF /Text /ImageC ]
  /XObject << 
 >>
>>
endobj
18 0 obj
<<
/Type /Page
/Parent 3 0 R
/Resources 17 0 R
/Contents 19 0 R
/Rotate 0
/Annots [ 
 ]
>>
endobj
19 0 obj
<<
/Length 20 0 R
>>
stream
BT/F1 10 Tf1 0 0 1 10 562 Tm10 TL0 0 0 rg (/******************************************************************************) TjT*0 0 0 rg () TjT*0 0 0 rg (    Program:        pdf_inc.i) TjT*0 0 0 rg (    ) TjT*0 0 0 rg (    Written By:     Gordon Campbell - PRO-SYS Consultants Ltd.) TjT*0 0 0 rg (    Written On:     June 2002) TjT*0 0 0 rg (    ) TjT*0 0 0 rg (    Description:    Contains function and variable definitions for ) TjT*0 0 0 rg (                    generating a PDF document from within Progress) TjT*0 0 0 rg () TjT*0 0 0 rg (    Note:           This can only be included once per program) TjT*0 0 0 rg () TjT*0 0 0 rg (    --------------------- Revision History ------------------) TjT*0 0 0 rg (    ) TjT*0 0 0 rg (    Date:     Author        Change Description) TjT*0 0 0 rg (    ) TjT*0 0 0 rg (    07/12/02  G Campbell    Initial Release) TjT*0 0 0 rg (    ) TjT*0 0 0 rg (    09/05/02  G Campbell    Fixed issue regarding the first call to pdf_set_font) TjT*0 0 0 rg (                              - wasn't actually setting the font, had to be ) TjT*0 0 0 rg (                                called twice before accepting changes) TjT*0 0 0 rg (                            Fixed annoying 'rebuild' message ) TjT*0 0 0 rg (                              - caused by inappropriate offset values when ) TjT*0 0 0 rg (                                producing XREF table) TjT*0 0 0 rg (                                ) TjT*0 0 0 rg (    09/10/02  G Campbell    Due to previous XREF changes, the pdf_load_image) TjT*0 0 0 rg (                            and pdf_load_images functions had to change also) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (    10/14/02  G Campbell    Changed the element setting functions to procedures) TjT*0 0 0 rg (                              - older versions of Progress were reaching the) TjT*0 0 0 rg (                                64K Segment issue.  ) TjT*0 0 0 rg (                                ) TjT*0 0 0 rg (    10/18/02  G Campbell    Added routine called pdf_replace_text and call from) TjT*0 0 0 rg (                            appropriate text procedures.  Used to handle special) TjT*0 0 0 rg (                            characters in text strings.) TjT*0 0 0 rg () TjT*0 0 0 rg (    10/22/02  G Campbell    As per Steven L. Jellin \(sjellin@elcb.co.za\)) TjT*0 0 0 rg (    ) TjT*0 0 0 rg (                            Added two procedure pdf_reset_all and ) TjT*0 0 0 rg (                            pdf_reset_stream.) TjT*0 0 0 rg (    ) TjT*0 0 0 rg (    11/04/02  G Campbell    As per Julian Lyndon-Smith \(jmls@tessera.co.uk\)) TjT*0 0 0 rg (    ) TjT*0 0 0 rg (                            Modified the Font/Image import procedures to use) TjT*0 0 0 rg (                            the OS-APPEND command.) TjT*0 0 0 rg () TjT*0 0 0 rg (    02/28/03  G Campbell    As per SourceForge Bug 694886 - Adam Davies) TjT*0 0 0 rg (                            \(adam.davies@travellink.com.au\)) TjT*0 0 0 rg (    ) TjT*0 0 0 rg (                            The base14 Font "Helvetica" is missing the width of ) TjT*0 0 0 rg (                            a character.  This means all lookups into the array ) TjT*0 0 0 rg (                            are out by one \(after about "D" in the ASCII chars\).) TjT*ETendstream
endobj
20 0 obj
3448
endobj
21 0 obj
<<
/Type /Page
/Parent 3 0 R
/Resources 17 0 R
/Contents 22 0 R
/Rotate 0
/Annots [ 
 ]
>>
endobj
22 0 obj
<<
/Length 23 0 R
>>
stream
BT/F1 10 Tf1 0 0 1 10 562 Tm10 TL0 0 0 rg (                            This causes calls to pdf_text_width to be quite a ) TjT*0 0 0 rg (                            long way out.) TjT*0 0 0 rg () TjT*0 0 0 rg (    02/28/03  G Campbell    As per SourceForge Bug 694888 - Adam Davies) TjT*0 0 0 rg (                            \(adam.davies@travellink.com.au\)) TjT*0 0 0 rg (    ) TjT*0 0 0 rg (                            Function pdf_text_width in pdf_inc.i is supposed to) TjT*0 0 0 rg (                            return the width of the passed in text parameter ) TjT*0 0 0 rg (                            based on the current font.) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (                            It does this by summing each characters width as) TjT*0 0 0 rg (                            defined in an Adobe AFM file for the font \(or) TjT*0 0 0 rg (                            hard-coded for base14 fonts\), then dividing by 1000 ) TjT*0 0 0 rg (                            and multiplyting by the point size.) TjT*0 0 0 rg () TjT*0 0 0 rg (                            However, rounding is done via INTEGER conversion ) TjT*0 0 0 rg (                            after the first division instead of after the ) TjT*0 0 0 rg (                            multiplication resulting in poor accuracy.                            ) TjT*0 0 0 rg () TjT*0 0 0 rg (    02/28/03  G Campbell    As per SourceForge Bug 695454 - Steve Southwell) TjT*0 0 0 rg (                            \(ses@bravepointdallas.com\)) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (                            In pdf_set_Orientation, the pdf stream name was) TjT*0 0 0 rg (                            hard-coded to "Spdf.) TjT*0 0 0 rg () TjT*0 0 0 rg (    02/28/03  G Campbell    As per Steve Southwell ) TjT*0 0 0 rg (                           \(ses@bravepointdallas.com\)) TjT*0 0 0 rg () TjT*0 0 0 rg (                            Added procedure pdf_text_center.  This centers text ) TjT*0 0 0 rg (                            on a certain X,Y point) TjT*0 0 0 rg () TjT*0 0 0 rg (    03/02/03  G Campbell    As per Adam Davies) TjT*0 0 0 rg (                           \(ses@bravepointdallas.com\)) TjT*0 0 0 rg (    ) TjT*0 0 0 rg (                            Added function pdf_get_NumFittingChars.  This ) TjT*0 0 0 rg (                            function returns the index of the last character ) TjT*0 0 0 rg (                            that will fit into the specified width.  It does ) TjT*0 0 0 rg (                            this by summing each characters AFM width \(as ) TjT*0 0 0 rg (                            specified in the tt_pdf_font.font_width array\) and ) TjT*0 0 0 rg (                            comparing with the required width \(converted into ) TjT*0 0 0 rg (                            these same units\).) TjT*0 0 0 rg () TjT*0 0 0 rg (    03/12/03  G Campbell    Added procedure pdf_link to allow for creation) TjT*0 0 0 rg (                            of document links. ) TjT*0 0 0 rg () TjT*0 0 0 rg (    03/19/03  G Campbell    As per Steve Southwell) TjT*0 0 0 rg (                            \(ses@bravepointdallas.com\)) TjT*0 0 0 rg (                                                        ) TjT*0 0 0 rg (                            Added procedure pdf_wrap_text to wrap text within) TjT*0 0 0 rg (                            a specific column range. Returns a parameter that) TjT*0 0 0 rg (                            tells you the last Y position used.) TjT*0 0 0 rg (                            ) TjT*ETendstream
endobj
23 0 obj
3724
endobj
24 0 obj
<<
/Type /Page
/Parent 3 0 R
/Resources 17 0 R
/Contents 25 0 R
/Rotate 0
/Annots [ 
 ]
>>
endobj
25 0 obj
<<
/Length 26 0 R
>>
stream
BT/F1 10 Tf1 0 0 1 10 562 Tm10 TL0 0 0 rg (                            Added function pdf_get_wrap_length.) TjT*0 0 0 rg (                            You can use the function to see how long a piece of ) TjT*0 0 0 rg (                            text WOULD be if you were to wrap it.) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (    03/29/03  G Campbell    As per Kim Allbritain) TjT*0 0 0 rg (                            \(kimatrr@tampabay.rr.com\)) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (                            pdf_text_width was always returning 0 \(zero\) when a ) TjT*0 0 0 rg (                            loaded \(non Base\) font was being used.  To fix this ) TjT*0 0 0 rg (                            issue I now run the pdf_ParseAFMFile routine as soon) TjT*0 0 0 rg (                            as pdf_load_font is called.  This also required) TjT*0 0 0 rg (                            additional field requirements to TT_pdf_font.) TjT*0 0 0 rg () TjT*0 0 0 rg (    06/23/03  G Campbell    Added ability to define a Rotation Angle.  Angles) TjT*0 0 0 rg (                            available are 0,90,180 and 270.  Also updated code) TjT*0 0 0 rg (                            to ensure that TextX and TextY were being set) TjT*0 0 0 rg (                            correctly whenever pdf_Text was being created \(based) TjT*0 0 0 rg (                            on current angle\).  Reworked placement of routines.) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (    07/02/03  G Campbell    Updated pdf_new_page to include calls to reset) TjT*0 0 0 rg (                            Angle and Text X/Y coordinates.) TjT*0 0 0 rg () TjT*0 0 0 rg (    08/18/03  G Campbell    Added pdf_set_BottomMargin and pdf_BottomMargin.  ) TjT*0 0 0 rg (                            This allows us to define a bottom most point when) TjT*0 0 0 rg (                            creating a document.  If any text goes below the) TjT*0 0 0 rg (                            Bottom Margin value \(eg: 50\) a new page is ) TjT*0 0 0 rg (                            automatically created.  This is useful for ) TjT*0 0 0 rg (                            converting text documents that don't have any page) TjT*0 0 0 rg (                            markers \(eg: ASCII chr\(12\) \).) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (                            Also, modified pdf_set_TextY to use the BottomMargin) TjT*0 0 0 rg (                            to determine if any text elements have \(or are\) ) TjT*0 0 0 rg (                            going below the Bottom Margin value.  If so, create) TjT*0 0 0 rg (                            a new page.) TjT*0 0 0 rg () TjT*0 0 0 rg (    08/18/03  G Campbell    As per Mike Frampton ) TjT*0 0 0 rg (                            \(MIkeF@sequoiains.com\)) TjT*0 0 0 rg (    ) TjT*0 0 0 rg (                            Added pdf_watermark procedure.  Allows you to create) TjT*0 0 0 rg (                            a text watermark \(eg: Invoice\) that appears on the) TjT*0 0 0 rg (                            first layer of the PDF --- below any rectangles,) TjT*0 0 0 rg (                            images etc.  Use with caution as you may not get the) TjT*0 0 0 rg (                            complete watermark if you overlay with images.) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (                            Sample Call:) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (                            RUN pdf_watermark \("Spdf",) TjT*0 0 0 rg (                                               "SAMPLE REPORT",) TjT*0 0 0 rg (                                               "Courier-Bold",) TjT*0 0 0 rg (                                               34,) TjT*0 0 0 rg (                                               .5,.5,.14,) TjT*0 0 0 rg (                                               300,500\).) TjT*ETendstream
endobj
26 0 obj
4091
endobj
27 0 obj
<<
/Type /Page
/Parent 3 0 R
/Resources 17 0 R
/Contents 28 0 R
/Rotate 0
/Annots [ 
 ]
>>
endobj
28 0 obj
<<
/Length 29 0 R
>>
stream
BT/F1 10 Tf1 0 0 1 10 562 Tm10 TL0 0 0 rg () TjT*0 0 0 rg (    08/18/03  G Campbell    As per Herbert Bayer \( I think\)) TjT*0 0 0 rg (                            Herbert Bayer \[Herbert.Bayer@bundrinno.de\]) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (                            Added pdf_skipn.  This allows you to skip 'n' number) TjT*0 0 0 rg (                            of lines.  Saves calling pdf_skip numerous times.) TjT*0 0 0 rg (    ) TjT*0 0 0 rg (    08/25/03  G Campbell    Added pdf_TotalPages function.) TjT*0 0 0 rg (    ) TjT*0 0 0 rg (                            This allows you to include the Total Number of Pages) TjT*0 0 0 rg (                            for the document directly into your report.  For ) TjT*0 0 0 rg (                            instance, if you wanted to have 'Page n of x' as) TjT*0 0 0 rg (                            your Page footer then you can implement this with) TjT*0 0 0 rg (                            pdf_TotalPages\(streamname\).) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (    08/26/03  G Campbell    Added PageHeader functionality.) TjT*0 0 0 rg (    ) TjT*0 0 0 rg (                            Similar to the PageFooter functionality previously) TjT*0 0 0 rg (                            outlined but for the top of the page.) TjT*0 0 0 rg () TjT*0 0 0 rg (    08/26/03  G Campbell    Updated pdf_xref to use PUT CONTROL and CHR\(13\)) TjT*0 0 0 rg (                            and CHR\(10\).) TjT*0 0 0 rg (                ) TjT*0 0 0 rg (                            This is due to compatability issues between UNIX) TjT*0 0 0 rg (                            and Windows implementations.  Each Xref line must) TjT*0 0 0 rg (                            be a certain number of characters and if we use ) TjT*0 0 0 rg (                            SKIP it will differ based on OS.) TjT*0 0 0 rg () TjT*0 0 0 rg (    08/27/03  G Campbell    Updated pdf_line to include a decimal value for) TjT*0 0 0 rg (                            the line thickness.) TjT*0 0 0 rg () TjT*0 0 0 rg (    09/02/03  G Campbell    Updated text drawing components to use pdf_TextY) TjT*0 0 0 rg (                            to determine the appropriate line number.  Removed) TjT*0 0 0 rg (                            use of pdf_CurrentLine.  This was causing issues ) TjT*0 0 0 rg (                            when working with PageFooter.  ) TjT*0 0 0 rg () TjT*0 0 0 rg (    09/02/03  G Campbell    Started playing with proportional fonts and text) TjT*0 0 0 rg (                            placement today.  Fixed some issues that were found) TjT*0 0 0 rg (                            hoping to accommodate the ability to place ) TjT*0 0 0 rg (                            proportional fonts correctly.  Fixed pdf_text_to to) TjT*0 0 0 rg (                            place appropriately but you may notice that the) TjT*0 0 0 rg (                            placement seems 'off' compared to Fixed fonts.  This ) TjT*0 0 0 rg (                            is due to the fact that the placement is calculated) TjT*0 0 0 rg (                            as -- \(Column Position * Width of CHR\(32\)\) minus the) TjT*0 0 0 rg (                            pdf_text_width\("of appropriate text"\).  This gives us) TjT*0 0 0 rg (                            a placemnt to work to.  Also, fixed pdf_text_width to) TjT*0 0 0 rg (                            use the entry + 1 to determine the font width -- this) TjT*0 0 0 rg (                            is because there is a zero entry in the AFM File ) TjT*0 0 0 rg (                            which doesn't coincide with ASC value of a character.) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (    09/02/03  G Campbell    Added function pdf_ImageDim to retrieve appropriate ) TjT*0 0 0 rg (                            dimension values.  Valid Dimension input values are) TjT*ETendstream
endobj
29 0 obj
4063
endobj
30 0 obj
<<
/Type /Page
/Parent 3 0 R
/Resources 17 0 R
/Contents 31 0 R
/Rotate 0
/Annots [ 
 ]
>>
endobj
31 0 obj
<<
/Length 32 0 R
>>
stream
BT/F1 10 Tf1 0 0 1 10 562 Tm10 TL0 0 0 rg (                            "HEIGHT" and "WIDTH".  Return 0 if can't find Image) TjT*0 0 0 rg (                            name. This is helpful when placing a rectangular box) TjT*0 0 0 rg (                            around an image.) TjT*0 0 0 rg () TjT*0 0 0 rg (    09/03/03  G Campbell    As per John Stonecipher \(jstone@inpac.com\)) TjT*0 0 0 rg (    ) TjT*0 0 0 rg (                            Added 'Line Weight' parameter to pdf_rect.  This allows ) TjT*0 0 0 rg (                            you to modify the line drawing weight of a rectangle.) TjT*0 0 0 rg () TjT*0 0 0 rg (    09/03/03  G Campbell    Ensured that all calls to pdf_error had the correct) TjT*0 0 0 rg (                            funtion or procedure name.  This is so that ) TjT*0 0 0 rg (                            debugging is easier.) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (    09/03/03  G Campbell    Updated pdf_wrap_text to see if any CHR\(13\) were) TjT*0 0 0 rg (                            included in the character string.  If so, then) TjT*0 0 0 rg (                            automatically do a pdf_skip in the wrap procedure.) TjT*0 0 0 rg () TjT*0 0 0 rg (    09/09/03  G Campbell    Added an extra parameter to pdf_load_font procedure.) TjT*0 0 0 rg (                            The additional parameter is used to define character) TjT*0 0 0 rg (                            differences.  That is, it allows you to re-map ) TjT*0 0 0 rg (                            specific characters in the AFM file to something ) TjT*0 0 0 rg (                            else.  The format of the DIF file should be:) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (                            <character number><space>/<PS Character Name><skip>) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (                            eg:) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (                            218 /SF010000) TjT*0 0 0 rg () TjT*0 0 0 rg (                            This would change character 218 \(Uacute in a cour.afm\)) TjT*0 0 0 rg (                            file to the Postscript character SF010000 \( which is) TjT*0 0 0 rg (                            "box drawings light down and right"\).  These codes) TjT*0 0 0 rg (                            can be found at:) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (                            http://partners.adobe.com/asn/tech/type/opentype/appendices/wgl4.jsp) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (                            Also, created pdf_font_diff procedure so that you ) TjT*0 0 0 rg (                            can dynamically re-map characters.) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (    09/09/03  G Campbell    Added pdfSKIP preprocessor.  This sets the SKIP) TjT*0 0 0 rg (                            to include the appropriate characters when compiled) TjT*0 0 0 rg (                            on a given OPSYS.  This is to help overcome the) TjT*0 0 0 rg (                            OS compatability issues when generating PDFs.) TjT*0 0 0 rg (                          ) TjT*0 0 0 rg (   10/14/03   G Campbell    Updated pdf_replace_text to handle back slashes in) TjT*0 0 0 rg (                            text fields.) TjT*0 0 0 rg () TjT*0 0 0 rg (  10/28/03    G Campbell    Added logic to determine whether a text line could) TjT*0 0 0 rg (                            possibly include the TotalPages function.  Hopefully) TjT*0 0 0 rg (                            this will help increase the processing speed.) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (  11/10/03    G Campbell    Copied pdf_inc.i to pdf_inc.p and reworked pdf_inc.i) TjT*ETendstream
endobj
32 0 obj
3941
endobj
33 0 obj
<<
/Type /Page
/Parent 3 0 R
/Resources 17 0 R
/Contents 34 0 R
/Rotate 0
/Annots [ 
 ]
>>
endobj
34 0 obj
<<
/Length 35 0 R
>>
stream
BT/F1 10 Tf1 0 0 1 10 562 Tm10 TL0 0 0 rg (                            to call pdf_inc.p Persistently) TjT*0 0 0 rg (                              ) TjT*0 0 0 rg (                            pdf_inc.i now also has single argument ) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (                            {1} - can be nothing, SUPER, or THIS-PROCEDURE) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (                            If SUPER or THIS-PROCEDURE then pdf_inc.p is ) TjT*0 0 0 rg (                            added as a Super Procedure appropriately. ) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (                            If nothing is specified then pdf_inc.p is run) TjT*0 0 0 rg (                            persistently.  All procedural calls must now ) TjT*0 0 0 rg (                            contain IN h_PDFinc.  eg:) TjT*0 0 0 rg (                            ) TjT*0 0 0 rg (                            RUN pdf_text IN h_PDFinc \("Spdf","Sample"\).) TjT*0 0 0 rg () TjT*0 0 0 rg (******************************************************************************/) TjT*0 0 0 rg () TjT*0 0 0 rg (DEF VAR h_PDFinc     AS HANDLE NO-UNDO.) TjT*0 0 0 rg () TjT*0 0 0 rg (/* Call pdf_inc.p Persistenly */) TjT*0 0 0 rg (RUN pdf_inc.p PERSISTENT ) TjT*0 0 0 rg (              SET h_PDFinc) TjT*0 0 0 rg (              \(INPUT THIS-PROCEDURE:HANDLE\) .) TjT*0 0 0 rg () TjT*0 0 0 rg (&IF "{1}" = "SESSION" &THEN) TjT*0 0 0 rg (  IF VALID-HANDLE\(SESSION\) THEN SESSION:ADD-SUPER-PROCEDURE\(h_PDFinc\).) TjT*0 0 0 rg (&ELSEIF "{1}" = "THIS-PROCEDURE" &THEN) TjT*0 0 0 rg (  IF VALID-HANDLE\(THIS-PROCEDURE\) THEN THIS-PROCEDURE:ADD-SUPER-PROCEDURE\(h_PDFinc\).) TjT*0 0 0 rg (&ENDIF) TjT*0 0 0 rg () TjT*0 0 0 rg (/* ------------------------ Pre-Define Functions -------------------------- */) TjT*0 0 0 rg () TjT*0 0 0 rg (FUNCTION pdf_Font RETURN CHARACTER \( INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_FontType RETURN CHARACTER \( INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_ImageDim RETURN INTEGER \( INPUT pdfStream AS CHARACTER,) TjT*0 0 0 rg (                                       INPUT pdfImage  AS CHARACTER,) TjT*0 0 0 rg (                                       INPUT pdfDim    AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_TextX RETURN INTEGER \( INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_TextY RETURN INTEGER \( INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_VerticalSpace RETURN INTEGER \( INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_PointSize RETURN DECIMAL \( INPUT pdfStream AS CHARACTER \) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_text_width RETURNS INTEGER \( INPUT pdfStream   AS CHARACTER,) TjT*0 0 0 rg (                                          INPUT pdfText     AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_TextRed RETURN DECIMAL \( INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_TextGreen RETURN DECIMAL \( INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_TextBlue RETURN DECIMAL \( INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_Page RETURN INTEGER \( INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_PageWidth RETURN INTEGER \( INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_Pageheight RETURN INTEGER \( INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_Angle RETURN INTEGER \( INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_TopMargin RETURN INTEGER \( INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_BottomMargin RETURN INTEGER \( INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*ETendstream
endobj
35 0 obj
3970
endobj
36 0 obj
<<
/Type /Page
/Parent 3 0 R
/Resources 17 0 R
/Contents 37 0 R
/Rotate 0
/Annots [ 
 ]
>>
endobj
37 0 obj
<<
/Length 38 0 R
>>
stream
BT/F1 10 Tf1 0 0 1 10 562 Tm10 TL0 0 0 rg (FUNCTION pdf_GraphicX RETURN INTEGER \( INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_GraphicY RETURN INTEGER \( INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_get_info RETURNS CHARACTER \( INPUT pdfStream    AS CHARACTER,) TjT*0 0 0 rg (                                          INPUT pdfAttribute AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_LeftMargin RETURN INTEGER \( INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_get_numFittingChars RETURNS INTEGER ) TjT*0 0 0 rg (                                \( INPUT pdfStream   AS CHARACTER,) TjT*0 0 0 rg (                                  INPUT pdfText     AS CHARACTER,) TjT*0 0 0 rg (                                  INPUT pdfRequiredWidth AS INTEGER \) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_Orientation RETURN CHARACTER \( INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_PaperType RETURN CHARACTER \( INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_Render RETURN INTEGER \( INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_get_wrap_length RETURNS INTEGER \( INPUT pdfStream   AS CHARACTER,) TjT*0 0 0 rg (                                               INPUT pdfText AS CHARACTER,) TjT*0 0 0 rg (                                               INPUT pdfWidth AS INTEGER \) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_TotalPages RETURN CHARACTER \(INPUT pdfStream AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_PageFooter RETURN LOGICAL \(INPUT pdfFooterProc AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg (FUNCTION pdf_PageHeader RETURN LOGICAL \(INPUT pdfHeaderProc AS CHARACTER\) IN h_PDFinc.) TjT*0 0 0 rg () TjT*0 0 0 rg (/* --------------------- End of Pre-Define Functions ---------------------- */) TjT*ETendstream
endobj
38 0 obj
1933
endobj
2 0 obj
<<
/Type /Catalog
/Pages 3 0 R
>>
endobj
3 0 obj
<<
/Type /Pages
/Count 7
/MediaBox [ 0 0 792 612 ]
/Kids [ 
18 0 R 
21 0 R 
24 0 R 
27 0 R 
30 0 R 
33 0 R 
36 0 R 
]
>>
endobj
xref
0 39
0000000000 65535 f
0000000017 00000 n
0000028381 00000 n
0000028436 00000 n
0000000163 00000 n
0000000237 00000 n
0000000340 00000 n
0000000451 00000 n
0000000559 00000 n
0000000674 00000 n
0000000779 00000 n
0000000893 00000 n
0000001004 00000 n
0000001122 00000 n
0000001230 00000 n
0000001340 00000 n
0000001448 00000 n
0000001562 00000 n
0000001790 00000 n
0000001908 00000 n
0000005417 00000 n
0000005441 00000 n
0000005559 00000 n
0000009344 00000 n
0000009368 00000 n
0000009486 00000 n
0000013638 00000 n
0000013662 00000 n
0000013780 00000 n
0000017904 00000 n
0000017928 00000 n
0000018046 00000 n
0000022048 00000 n
0000022072 00000 n
0000022190 00000 n
0000026221 00000 n
0000026245 00000 n
0000026363 00000 n
0000028357 00000 n
trailer
<<
/Size 39
/Root 2 0 R
/Info 1 0 R
>>
startxref
28588
%%EOF
