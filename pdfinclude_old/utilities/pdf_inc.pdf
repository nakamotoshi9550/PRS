%PDF-1.4
%הדֿׂ
1 0 obj
<<
/Author ()
/CreationDate (D:20051209103516-0800)
/Producer ()
/Creator ()
/Subject ()
/Title ()
/Keywords ()
 >>
endobj
4 0 obj
<<
/Type /Encoding
/BaseEncoding /WinAnsiEncoding
>>
endobj
5 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /BF1
/Encoding 4 0 R
/BaseFont /Courier
>>
endobj
6 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /BF2
/Encoding 4 0 R
/BaseFont /Courier-Oblique
>>
endobj
7 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /BF3
/Encoding 4 0 R
/BaseFont /Courier-Bold
>>
endobj
8 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /BF4
/Encoding 4 0 R
/BaseFont /Courier-BoldOblique
>>
endobj
9 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /BF5
/Encoding 4 0 R
/BaseFont /Helvetica
>>
endobj
10 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /BF6
/Encoding 4 0 R
/BaseFont /Helvetica-Oblique
>>
endobj
11 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /BF7
/Encoding 4 0 R
/BaseFont /Helvetica-Bold
>>
endobj
12 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /BF8
/Encoding 4 0 R
/BaseFont /Helvetica-BoldOblique
>>
endobj
13 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /BF9
/Encoding 4 0 R
/BaseFont /Times-Roman
>>
endobj
14 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /BF10
/Encoding 4 0 R
/BaseFont /Times-Italic
>>
endobj
15 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /BF11
/Encoding 4 0 R
/BaseFont /Times-Bold
>>
endobj
16 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /BF12
/Encoding 4 0 R
/BaseFont /Times-BoldItalic
>>
endobj
17 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /BF13
/Encoding << /BaseEncoding /StandardEncoding >>
/BaseFont /Symbol
>>
endobj
18 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /BF14
/Encoding << /BaseEncoding /StandardEncoding >>
/BaseFont /ZapfDingbats
>>
endobj
19 0 obj
<<
  /Font <<  /BF1 5 0 R /BF2 6 0 R /BF3 7 0 R /BF4 8 0 R /BF9 13 0 R /BF5 9 0 R /BF6 10 0 R /BF7 11 0 R /BF14 18 0 R /BF8 12 0 R /BF10 14 0 R /BF11 15 0 R /BF12 16 0 R /BF13 17 0 R >>
  /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
  /XObject << 
 >>
>>
endobj
20 0 obj
<<
/Type /Page
/Parent 3 0 R
/Resources 19 0 R
/Contents 21 0 R
/Rotate 0
/MediaBox [ 0 0 612 792]
/Annots [ 
 ]
>>
endobj
21 0 obj
<<
/Length 22 0 R
>>
stream
q
1 w
5 5 602 782 re
S
Q
BT
/BF1 10 Tf
 1 0 0 1 10 742 Tm
0 0 0 rg 
/BF1 10 Tf
() Tj
0 .7 0 rg 
(/*) Tj
(*****************************************************************************) Tj
1 0 0 1 10 742 Tm
0 -10 TD
() Tj
1 0 0 1 10 732 Tm
0 -10 TD
(    Program:        pdf_inc.i) Tj
1 0 0 1 10 722 Tm
0 -10 TD
(    ) Tj
1 0 0 1 10 712 Tm
0 -10 TD
(    Written By:     Gordon Campbell - PRO-SYS Consultants Ltd.) Tj
1 0 0 1 10 702 Tm
0 -10 TD
(    Written On:     June 2002) Tj
1 0 0 1 10 692 Tm
0 -10 TD
(    ) Tj
1 0 0 1 10 682 Tm
0 -10 TD
(    Description:    Contains function and variable definitions for ) Tj
1 0 0 1 10 672 Tm
0 -10 TD
(                    generating a PDF document from within Progress) Tj
1 0 0 1 10 662 Tm
0 -10 TD
() Tj
1 0 0 1 10 652 Tm
0 -10 TD
(    Note:           This can only be included once per program) Tj
1 0 0 1 10 642 Tm
0 -10 TD
() Tj
1 0 0 1 10 632 Tm
0 -10 TD
(    --------------------- Revision History ------------------) Tj
1 0 0 1 10 622 Tm
0 -10 TD
(    ) Tj
1 0 0 1 10 612 Tm
0 -10 TD
(    Date:     Author        Change Description) Tj
1 0 0 1 10 602 Tm
0 -10 TD
(    ) Tj
1 0 0 1 10 592 Tm
0 -10 TD
(    07/12/02  G Campbell    Initial Release) Tj
1 0 0 1 10 582 Tm
0 -10 TD
(    ) Tj
1 0 0 1 10 572 Tm
0 -10 TD
(    09/05/02  G Campbell    Fixed issue regarding the first call to pdf_set_font) Tj
1 0 0 1 10 562 Tm
0 -10 TD
(                              - wasn't actually setting the font, had to be ) Tj
1 0 0 1 10 552 Tm
0 -10 TD
(                                called twice before accepting changes) Tj
1 0 0 1 10 542 Tm
0 -10 TD
(                            Fixed annoying 'rebuild' message ) Tj
1 0 0 1 10 532 Tm
0 -10 TD
(                              - caused by inappropriate offset values when ) Tj
1 0 0 1 10 522 Tm
0 -10 TD
(                                producing XREF table) Tj
1 0 0 1 10 512 Tm
0 -10 TD
(                                ) Tj
1 0 0 1 10 502 Tm
0 -10 TD
(    09/10/02  G Campbell    Due to previous XREF changes, the pdf_load_image) Tj
1 0 0 1 10 492 Tm
0 -10 TD
(                            and pdf_load_images functions had to change also) Tj
1 0 0 1 10 482 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 472 Tm
0 -10 TD
(    10/14/02  G Campbell    Changed the element setting functions to procedures) Tj
1 0 0 1 10 462 Tm
0 -10 TD
(                              - older versions of Progress were reaching the) Tj
1 0 0 1 10 452 Tm
0 -10 TD
(                                64K Segment issue.  ) Tj
1 0 0 1 10 442 Tm
0 -10 TD
(                                ) Tj
1 0 0 1 10 432 Tm
0 -10 TD
(    10/18/02  G Campbell    Added routine called pdf_replace_text and call from) Tj
1 0 0 1 10 422 Tm
0 -10 TD
(                            appropriate text procedures.  Used to handle special) Tj
1 0 0 1 10 412 Tm
0 -10 TD
(                            characters in text strings.) Tj
1 0 0 1 10 402 Tm
0 -10 TD
() Tj
1 0 0 1 10 392 Tm
0 -10 TD
(    10/22/02  G Campbell    As per Steven L. Jellin \(sjellin@elcb.co.za\)) Tj
1 0 0 1 10 382 Tm
0 -10 TD
(    ) Tj
1 0 0 1 10 372 Tm
0 -10 TD
(                            Added two procedure pdf_reset_all and ) Tj
1 0 0 1 10 362 Tm
0 -10 TD
(                            pdf_reset_stream.) Tj
1 0 0 1 10 352 Tm
0 -10 TD
(    ) Tj
1 0 0 1 10 342 Tm
0 -10 TD
(    11/04/02  G Campbell    As per Julian Lyndon-Smith \(jmls@tessera.co.uk\)) Tj
1 0 0 1 10 332 Tm
0 -10 TD
(    ) Tj
1 0 0 1 10 322 Tm
0 -10 TD
(                            Modified the Font/Image import procedures to use) Tj
1 0 0 1 10 312 Tm
0 -10 TD
(                            the OS-APPEND command.) Tj
1 0 0 1 10 302 Tm
0 -10 TD
() Tj
1 0 0 1 10 292 Tm
0 -10 TD
(    02/28/03  G Campbell    As per SourceForge Bug 694886 - Adam Davies) Tj
1 0 0 1 10 282 Tm
0 -10 TD
(                            \(adam.davies@travellink.com.au\)) Tj
1 0 0 1 10 272 Tm
0 -10 TD
(    ) Tj
1 0 0 1 10 262 Tm
0 -10 TD
(                            The base14 Font "Helvetica" is missing the width of ) Tj
1 0 0 1 10 252 Tm
0 -10 TD
(                            a character.  This means all lookups into the array ) Tj
1 0 0 1 10 242 Tm
0 -10 TD
(                            are out by one \(after about "D" in the ASCII chars\).) Tj
1 0 0 1 10 232 Tm
0 -10 TD
(                            This causes calls to pdf_text_width to be quite a ) Tj
1 0 0 1 10 222 Tm
0 -10 TD
(                            long way out.) Tj
1 0 0 1 10 212 Tm
0 -10 TD
() Tj
1 0 0 1 10 202 Tm
0 -10 TD
(    02/28/03  G Campbell    As per SourceForge Bug 694888 - Adam Davies) Tj
1 0 0 1 10 192 Tm
0 -10 TD
(                            \(adam.davies@travellink.com.au\)) Tj
1 0 0 1 10 182 Tm
0 -10 TD
(    ) Tj
1 0 0 1 10 172 Tm
0 -10 TD
(                            Function pdf_text_width in pdf_inc.i is supposed to) Tj
1 0 0 1 10 162 Tm
0 -10 TD
(                            return the width of the passed in text parameter ) Tj
1 0 0 1 10 152 Tm
0 -10 TD
(                            based on the current font.) Tj
1 0 0 1 10 142 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 132 Tm
0 -10 TD
(                            It does this by summing each characters width as) Tj
1 0 0 1 10 122 Tm
0 -10 TD
(                            defined in an Adobe AFM file for the font \(or) Tj
1 0 0 1 10 112 Tm
0 -10 TD
(                            hard-coded for base14 fonts\), then dividing by 1000 ) Tj
1 0 0 1 10 102 Tm
0 -10 TD
(                            and multiplyting by the point size.) Tj
1 0 0 1 10 92 Tm
0 -10 TD
() Tj
1 0 0 1 10 82 Tm
0 -10 TD
(                            However, rounding is done via INTEGER conversion ) Tj
1 0 0 1 10 72 Tm
0 -10 TD
(                            after the first division instead of after the ) Tj
1 0 0 1 10 62 Tm
0 -10 TD
(                            multiplication resulting in poor accuracy.                            ) Tj
1 0 0 1 10 52 Tm
0 -10 TD
() Tj
1 0 0 1 10 42 Tm
0 -10 TD
(    02/28/03  G Campbell    As per SourceForge Bug 695454 - Steve Southwell) Tj
1 0 0 1 10 32 Tm
0 -10 TD
1 0 0 1 10 25 Tm
/BF1 6 Tf
0 0 0 rg 
/BF1 6 Tf
0 0 0 rg
1 0 0 1 10 10 Tm
(Produced by PDFinclude) Tj
/BF1 10 Tf
0 .7 0 rg 
ET
endstream
endobj
22 0 obj
6128
endobj
23 0 obj
<<
/Type /Page
/Parent 3 0 R
/Resources 19 0 R
/Contents 24 0 R
/Rotate 0
/MediaBox [ 0 0 612 792]
/Annots [ 
 ]
>>
endobj
24 0 obj
<<
/Length 25 0 R
>>
stream
q
1 w
5 5 602 782 re
S
Q
BT
/BF1 10 Tf
 1 0 0 1 10 742 Tm
0 .7 0 rg 
/BF1 10 Tf
(                            \(ses@bravepointdallas.com\)) Tj
1 0 0 1 10 742 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 732 Tm
0 -10 TD
(                            In pdf_set_Orientation, the pdf stream name was) Tj
1 0 0 1 10 722 Tm
0 -10 TD
(                            hard-coded to "Spdf.) Tj
1 0 0 1 10 712 Tm
0 -10 TD
() Tj
1 0 0 1 10 702 Tm
0 -10 TD
(    02/28/03  G Campbell    As per Steve Southwell ) Tj
1 0 0 1 10 692 Tm
0 -10 TD
(                           \(ses@bravepointdallas.com\)) Tj
1 0 0 1 10 682 Tm
0 -10 TD
() Tj
1 0 0 1 10 672 Tm
0 -10 TD
(                            Added procedure pdf_text_center.  This centers text ) Tj
1 0 0 1 10 662 Tm
0 -10 TD
(                            on a certain X,Y point) Tj
1 0 0 1 10 652 Tm
0 -10 TD
() Tj
1 0 0 1 10 642 Tm
0 -10 TD
(    03/02/03  G Campbell    As per Adam Davies) Tj
1 0 0 1 10 632 Tm
0 -10 TD
(                           \(ses@bravepointdallas.com\)) Tj
1 0 0 1 10 622 Tm
0 -10 TD
(    ) Tj
1 0 0 1 10 612 Tm
0 -10 TD
(                            Added function pdf_get_NumFittingChars.  This ) Tj
1 0 0 1 10 602 Tm
0 -10 TD
(                            function returns the index of the last character ) Tj
1 0 0 1 10 592 Tm
0 -10 TD
(                            that will fit into the specified width.  It does ) Tj
1 0 0 1 10 582 Tm
0 -10 TD
(                            this by summing each characters AFM width \(as ) Tj
1 0 0 1 10 572 Tm
0 -10 TD
(                            specified in the tt_pdf_font.font_width array\) and ) Tj
1 0 0 1 10 562 Tm
0 -10 TD
(                            comparing with the required width \(converted into ) Tj
1 0 0 1 10 552 Tm
0 -10 TD
(                            these same units\).) Tj
1 0 0 1 10 542 Tm
0 -10 TD
() Tj
1 0 0 1 10 532 Tm
0 -10 TD
(    03/12/03  G Campbell    Added procedure pdf_link to allow for creation) Tj
1 0 0 1 10 522 Tm
0 -10 TD
(                            of document links. ) Tj
1 0 0 1 10 512 Tm
0 -10 TD
() Tj
1 0 0 1 10 502 Tm
0 -10 TD
(    03/19/03  G Campbell    As per Steve Southwell) Tj
1 0 0 1 10 492 Tm
0 -10 TD
(                            \(ses@bravepointdallas.com\)) Tj
1 0 0 1 10 482 Tm
0 -10 TD
(                                                        ) Tj
1 0 0 1 10 472 Tm
0 -10 TD
(                            Added procedure pdf_wrap_text to wrap text within) Tj
1 0 0 1 10 462 Tm
0 -10 TD
(                            a specific column range. Returns a parameter that) Tj
1 0 0 1 10 452 Tm
0 -10 TD
(                            tells you the last Y position used.) Tj
1 0 0 1 10 442 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 432 Tm
0 -10 TD
(                            Added function pdf_get_wrap_length.) Tj
1 0 0 1 10 422 Tm
0 -10 TD
(                            You can use the function to see how long a piece of ) Tj
1 0 0 1 10 412 Tm
0 -10 TD
(                            text WOULD be if you were to wrap it.) Tj
1 0 0 1 10 402 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 392 Tm
0 -10 TD
(    03/29/03  G Campbell    As per Kim Allbritain) Tj
1 0 0 1 10 382 Tm
0 -10 TD
(                            \(kimatrr@tampabay.rr.com\)) Tj
1 0 0 1 10 372 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 362 Tm
0 -10 TD
(                            pdf_text_width was always returning 0 \(zero\) when a ) Tj
1 0 0 1 10 352 Tm
0 -10 TD
(                            loaded \(non Base\) font was being used.  To fix this ) Tj
1 0 0 1 10 342 Tm
0 -10 TD
(                            issue I now run the pdf_ParseAFMFile routine as soon) Tj
1 0 0 1 10 332 Tm
0 -10 TD
(                            as pdf_load_font is called.  This also required) Tj
1 0 0 1 10 322 Tm
0 -10 TD
(                            additional field requirements to TT_pdf_font.) Tj
1 0 0 1 10 312 Tm
0 -10 TD
() Tj
1 0 0 1 10 302 Tm
0 -10 TD
(    06/23/03  G Campbell    Added ability to define a Rotation Angle.  Angles) Tj
1 0 0 1 10 292 Tm
0 -10 TD
(                            available are 0,90,180 and 270.  Also updated code) Tj
1 0 0 1 10 282 Tm
0 -10 TD
(                            to ensure that TextX and TextY were being set) Tj
1 0 0 1 10 272 Tm
0 -10 TD
(                            correctly whenever pdf_Text was being created \(based) Tj
1 0 0 1 10 262 Tm
0 -10 TD
(                            on current angle\).  Reworked placement of routines.) Tj
1 0 0 1 10 252 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 242 Tm
0 -10 TD
(    07/02/03  G Campbell    Updated pdf_new_page to include calls to reset) Tj
1 0 0 1 10 232 Tm
0 -10 TD
(                            Angle and Text X/Y coordinates.) Tj
1 0 0 1 10 222 Tm
0 -10 TD
() Tj
1 0 0 1 10 212 Tm
0 -10 TD
(    08/18/03  G Campbell    Added pdf_set_BottomMargin and pdf_BottomMargin.  ) Tj
1 0 0 1 10 202 Tm
0 -10 TD
(                            This allows us to define a bottom most point when) Tj
1 0 0 1 10 192 Tm
0 -10 TD
(                            creating a document.  If any text goes below the) Tj
1 0 0 1 10 182 Tm
0 -10 TD
(                            Bottom Margin value \(eg: 50\) a new page is ) Tj
1 0 0 1 10 172 Tm
0 -10 TD
(                            automatically created.  This is useful for ) Tj
1 0 0 1 10 162 Tm
0 -10 TD
(                            converting text documents that don't have any page) Tj
1 0 0 1 10 152 Tm
0 -10 TD
(                            markers \(eg: ASCII chr\(12\) \).) Tj
1 0 0 1 10 142 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 132 Tm
0 -10 TD
(                            Also, modified pdf_set_TextY to use the BottomMargin) Tj
1 0 0 1 10 122 Tm
0 -10 TD
(                            to determine if any text elements have \(or are\) ) Tj
1 0 0 1 10 112 Tm
0 -10 TD
(                            going below the Bottom Margin value.  If so, create) Tj
1 0 0 1 10 102 Tm
0 -10 TD
(                            a new page.) Tj
1 0 0 1 10 92 Tm
0 -10 TD
() Tj
1 0 0 1 10 82 Tm
0 -10 TD
(    08/18/03  G Campbell    As per Mike Frampton ) Tj
1 0 0 1 10 72 Tm
0 -10 TD
(                            \(MIkeF@sequoiains.com\)) Tj
1 0 0 1 10 62 Tm
0 -10 TD
(    ) Tj
1 0 0 1 10 52 Tm
0 -10 TD
(                            Added pdf_watermark procedure.  Allows you to create) Tj
1 0 0 1 10 42 Tm
0 -10 TD
(                            a text watermark \(eg: Invoice\) that appears on the) Tj
1 0 0 1 10 32 Tm
0 -10 TD
1 0 0 1 10 25 Tm
/BF1 6 Tf
0 0 0 rg 
/BF1 6 Tf
0 0 0 rg
1 0 0 1 10 10 Tm
(Produced by PDFinclude) Tj
/BF1 10 Tf
0 .7 0 rg 
ET
endstream
endobj
25 0 obj
6553
endobj
26 0 obj
<<
/Type /Page
/Parent 3 0 R
/Resources 19 0 R
/Contents 27 0 R
/Rotate 0
/MediaBox [ 0 0 612 792]
/Annots [ 
 ]
>>
endobj
27 0 obj
<<
/Length 28 0 R
>>
stream
q
1 w
5 5 602 782 re
S
Q
BT
/BF1 10 Tf
 1 0 0 1 10 742 Tm
0 .7 0 rg 
/BF1 10 Tf
(                            first layer of the PDF --- below any rectangles,) Tj
1 0 0 1 10 742 Tm
0 -10 TD
(                            images etc.  Use with caution as you may not get the) Tj
1 0 0 1 10 732 Tm
0 -10 TD
(                            complete watermark if you overlay with images.) Tj
1 0 0 1 10 722 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 712 Tm
0 -10 TD
(                            Sample Call:) Tj
1 0 0 1 10 702 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 692 Tm
0 -10 TD
(                            RUN pdf_watermark \("Spdf",) Tj
1 0 0 1 10 682 Tm
0 -10 TD
(                                               "SAMPLE REPORT",) Tj
1 0 0 1 10 672 Tm
0 -10 TD
(                                               "Courier-Bold",) Tj
1 0 0 1 10 662 Tm
0 -10 TD
(                                               34,) Tj
1 0 0 1 10 652 Tm
0 -10 TD
(                                               .5,.5,.14,) Tj
1 0 0 1 10 642 Tm
0 -10 TD
(                                               300,500\).) Tj
1 0 0 1 10 632 Tm
0 -10 TD
() Tj
1 0 0 1 10 622 Tm
0 -10 TD
(    08/18/03  G Campbell    As per Herbert Bayer \( I think\)) Tj
1 0 0 1 10 612 Tm
0 -10 TD
(                            Herbert Bayer \[Herbert.Bayer@bundrinno.de\]) Tj
1 0 0 1 10 602 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 592 Tm
0 -10 TD
(                            Added pdf_skipn.  This allows you to skip 'n' number) Tj
1 0 0 1 10 582 Tm
0 -10 TD
(                            of lines.  Saves calling pdf_skip numerous times.) Tj
1 0 0 1 10 572 Tm
0 -10 TD
(    ) Tj
1 0 0 1 10 562 Tm
0 -10 TD
(    08/25/03  G Campbell    Added pdf_TotalPages function.) Tj
1 0 0 1 10 552 Tm
0 -10 TD
(    ) Tj
1 0 0 1 10 542 Tm
0 -10 TD
(                            This allows you to include the Total Number of Pages) Tj
1 0 0 1 10 532 Tm
0 -10 TD
(                            for the document directly into your report.  For ) Tj
1 0 0 1 10 522 Tm
0 -10 TD
(                            instance, if you wanted to have 'Page n of x' as) Tj
1 0 0 1 10 512 Tm
0 -10 TD
(                            your Page footer then you can implement this with) Tj
1 0 0 1 10 502 Tm
0 -10 TD
(                            pdf_TotalPages\(streamname\).) Tj
1 0 0 1 10 492 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 482 Tm
0 -10 TD
(    08/26/03  G Campbell    Added PageHeader functionality.) Tj
1 0 0 1 10 472 Tm
0 -10 TD
(    ) Tj
1 0 0 1 10 462 Tm
0 -10 TD
(                            Similar to the PageFooter functionality previously) Tj
1 0 0 1 10 452 Tm
0 -10 TD
(                            outlined but for the top of the page.) Tj
1 0 0 1 10 442 Tm
0 -10 TD
() Tj
1 0 0 1 10 432 Tm
0 -10 TD
(    08/26/03  G Campbell    Updated pdf_xref to use PUT CONTROL and CHR\(13\)) Tj
1 0 0 1 10 422 Tm
0 -10 TD
(                            and CHR\(10\).) Tj
1 0 0 1 10 412 Tm
0 -10 TD
(                ) Tj
1 0 0 1 10 402 Tm
0 -10 TD
(                            This is due to compatability issues between UNIX) Tj
1 0 0 1 10 392 Tm
0 -10 TD
(                            and Windows implementations.  Each Xref line must) Tj
1 0 0 1 10 382 Tm
0 -10 TD
(                            be a certain number of characters and if we use ) Tj
1 0 0 1 10 372 Tm
0 -10 TD
(                            SKIP it will differ based on OS.) Tj
1 0 0 1 10 362 Tm
0 -10 TD
() Tj
1 0 0 1 10 352 Tm
0 -10 TD
(    08/27/03  G Campbell    Updated pdf_line to include a decimal value for) Tj
1 0 0 1 10 342 Tm
0 -10 TD
(                            the line thickness.) Tj
1 0 0 1 10 332 Tm
0 -10 TD
() Tj
1 0 0 1 10 322 Tm
0 -10 TD
(    09/02/03  G Campbell    Updated text drawing components to use pdf_TextY) Tj
1 0 0 1 10 312 Tm
0 -10 TD
(                            to determine the appropriate line number.  Removed) Tj
1 0 0 1 10 302 Tm
0 -10 TD
(                            use of pdf_CurrentLine.  This was causing issues ) Tj
1 0 0 1 10 292 Tm
0 -10 TD
(                            when working with PageFooter.  ) Tj
1 0 0 1 10 282 Tm
0 -10 TD
() Tj
1 0 0 1 10 272 Tm
0 -10 TD
(    09/02/03  G Campbell    Started playing with proportional fonts and text) Tj
1 0 0 1 10 262 Tm
0 -10 TD
(                            placement today.  Fixed some issues that were found) Tj
1 0 0 1 10 252 Tm
0 -10 TD
(                            hoping to accommodate the ability to place ) Tj
1 0 0 1 10 242 Tm
0 -10 TD
(                            proportional fonts correctly.  Fixed pdf_text_to to) Tj
1 0 0 1 10 232 Tm
0 -10 TD
(                            place appropriately but you may notice that the) Tj
1 0 0 1 10 222 Tm
0 -10 TD
(                            placement seems 'off' compared to Fixed fonts.  This ) Tj
1 0 0 1 10 212 Tm
0 -10 TD
(                            is due to the fact that the placement is calculated) Tj
1 0 0 1 10 202 Tm
0 -10 TD
(                            as -- \(Column Position * Width of CHR\(32\)\) minus the) Tj
1 0 0 1 10 192 Tm
0 -10 TD
(                            pdf_text_width\("of appropriate text"\).  This gives us) Tj
1 0 0 1 10 182 Tm
0 -10 TD
(                            a placemnt to work to.  Also, fixed pdf_text_width to) Tj
1 0 0 1 10 172 Tm
0 -10 TD
(                            use the entry + 1 to determine the font width -- this) Tj
1 0 0 1 10 162 Tm
0 -10 TD
(                            is because there is a zero entry in the AFM File ) Tj
1 0 0 1 10 152 Tm
0 -10 TD
(                            which doesn't coincide with ASC value of a character.) Tj
1 0 0 1 10 142 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 132 Tm
0 -10 TD
(    09/02/03  G Campbell    Added function pdf_ImageDim to retrieve appropriate ) Tj
1 0 0 1 10 122 Tm
0 -10 TD
(                            dimension values.  Valid Dimension input values are) Tj
1 0 0 1 10 112 Tm
0 -10 TD
(                            "HEIGHT" and "WIDTH".  Return 0 if can't find Image) Tj
1 0 0 1 10 102 Tm
0 -10 TD
(                            name. This is helpful when placing a rectangular box) Tj
1 0 0 1 10 92 Tm
0 -10 TD
(                            around an image.) Tj
1 0 0 1 10 82 Tm
0 -10 TD
() Tj
1 0 0 1 10 72 Tm
0 -10 TD
(    09/03/03  G Campbell    As per John Stonecipher \(jstone@inpac.com\)) Tj
1 0 0 1 10 62 Tm
0 -10 TD
(    ) Tj
1 0 0 1 10 52 Tm
0 -10 TD
(                            Added 'Line Weight' parameter to pdf_rect.  This allows ) Tj
1 0 0 1 10 42 Tm
0 -10 TD
(                            you to modify the line drawing weight of a rectangle.) Tj
1 0 0 1 10 32 Tm
0 -10 TD
1 0 0 1 10 25 Tm
/BF1 6 Tf
0 0 0 rg 
/BF1 6 Tf
0 0 0 rg
1 0 0 1 10 10 Tm
(Produced by PDFinclude) Tj
/BF1 10 Tf
0 .7 0 rg 
ET
endstream
endobj
28 0 obj
6724
endobj
29 0 obj
<<
/Type /Page
/Parent 3 0 R
/Resources 19 0 R
/Contents 30 0 R
/Rotate 0
/MediaBox [ 0 0 612 792]
/Annots [ 
 ]
>>
endobj
30 0 obj
<<
/Length 31 0 R
>>
stream
q
1 w
5 5 602 782 re
S
Q
BT
/BF1 10 Tf
 1 0 0 1 10 742 Tm
0 .7 0 rg 
/BF1 10 Tf
() Tj
1 0 0 1 10 742 Tm
0 -10 TD
(    09/03/03  G Campbell    Ensured that all calls to pdf_error had the correct) Tj
1 0 0 1 10 732 Tm
0 -10 TD
(                            funtion or procedure name.  This is so that ) Tj
1 0 0 1 10 722 Tm
0 -10 TD
(                            debugging is easier.) Tj
1 0 0 1 10 712 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 702 Tm
0 -10 TD
(    09/03/03  G Campbell    Updated pdf_wrap_text to see if any CHR\(13\) were) Tj
1 0 0 1 10 692 Tm
0 -10 TD
(                            included in the character string.  If so, then) Tj
1 0 0 1 10 682 Tm
0 -10 TD
(                            automatically do a pdf_skip in the wrap procedure.) Tj
1 0 0 1 10 672 Tm
0 -10 TD
() Tj
1 0 0 1 10 662 Tm
0 -10 TD
(    09/09/03  G Campbell    Added an extra parameter to pdf_load_font procedure.) Tj
1 0 0 1 10 652 Tm
0 -10 TD
(                            The additional parameter is used to define character) Tj
1 0 0 1 10 642 Tm
0 -10 TD
(                            differences.  That is, it allows you to re-map ) Tj
1 0 0 1 10 632 Tm
0 -10 TD
(                            specific characters in the AFM file to something ) Tj
1 0 0 1 10 622 Tm
0 -10 TD
(                            else.  The format of the DIF file should be:) Tj
1 0 0 1 10 612 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 602 Tm
0 -10 TD
(                            <character number><space>/<PS Character Name><skip>) Tj
1 0 0 1 10 592 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 582 Tm
0 -10 TD
(                            eg:) Tj
1 0 0 1 10 572 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 562 Tm
0 -10 TD
(                            218 /SF010000) Tj
1 0 0 1 10 552 Tm
0 -10 TD
() Tj
1 0 0 1 10 542 Tm
0 -10 TD
(                            This would change character 218 \(Uacute in a cour.afm\)) Tj
1 0 0 1 10 532 Tm
0 -10 TD
(                            file to the Postscript character SF010000 \( which is) Tj
1 0 0 1 10 522 Tm
0 -10 TD
(                            "box drawings light down and right"\).  These codes) Tj
1 0 0 1 10 512 Tm
0 -10 TD
(                            can be found at:) Tj
1 0 0 1 10 502 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 492 Tm
0 -10 TD
(                            http://partners.adobe.com/asn/tech/type/opentype/appendices/wgl4.jsp) Tj
1 0 0 1 10 482 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 472 Tm
0 -10 TD
(                            Also, created pdf_font_diff procedure so that you ) Tj
1 0 0 1 10 462 Tm
0 -10 TD
(                            can dynamically re-map characters.) Tj
1 0 0 1 10 452 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 442 Tm
0 -10 TD
(  09/09/03    G Campbell    Added pdfSKIP preprocessor.  This sets the SKIP) Tj
1 0 0 1 10 432 Tm
0 -10 TD
(                            to include the appropriate characters when compiled) Tj
1 0 0 1 10 422 Tm
0 -10 TD
(                            on a given OPSYS.  This is to help overcome the) Tj
1 0 0 1 10 412 Tm
0 -10 TD
(                            OS compatability issues when generating PDFs.) Tj
1 0 0 1 10 402 Tm
0 -10 TD
(                          ) Tj
1 0 0 1 10 392 Tm
0 -10 TD
(  10/14/03    G Campbell    Updated pdf_replace_text to handle back slashes in) Tj
1 0 0 1 10 382 Tm
0 -10 TD
(                            text fields.) Tj
1 0 0 1 10 372 Tm
0 -10 TD
() Tj
1 0 0 1 10 362 Tm
0 -10 TD
(  10/28/03    G Campbell    Added logic to determine whether a text line could) Tj
1 0 0 1 10 352 Tm
0 -10 TD
(                            possibly include the TotalPages function.  Hopefully) Tj
1 0 0 1 10 342 Tm
0 -10 TD
(                            this will help increase the processing speed.) Tj
1 0 0 1 10 332 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 322 Tm
0 -10 TD
(  11/10/03    G Campbell    Copied pdf_inc.i to pdf_inc.p and reworked pdf_inc.i) Tj
1 0 0 1 10 312 Tm
0 -10 TD
(                            to call pdf_inc.p Persistently) Tj
1 0 0 1 10 302 Tm
0 -10 TD
(                              ) Tj
1 0 0 1 10 292 Tm
0 -10 TD
(                            pdf_inc.i now also has single argument ) Tj
1 0 0 1 10 282 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 272 Tm
0 -10 TD
(                            {1} - can be nothing, THIS-PROCEDURE, or non-blank) Tj
1 0 0 1 10 262 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 252 Tm
0 -10 TD
(                            If blank,then pdf_inc.p is added as a SUPER procedure) Tj
1 0 0 1 10 242 Tm
0 -10 TD
(                            to the SESSION handle.) Tj
1 0 0 1 10 232 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 222 Tm
0 -10 TD
(                            If THIS-PROCEDURE, then pdf_inc.p is ) Tj
1 0 0 1 10 212 Tm
0 -10 TD
(                            added as a SUPER Procedure to the THIS-PROCEDURE) Tj
1 0 0 1 10 202 Tm
0 -10 TD
(                            handle. ) Tj
1 0 0 1 10 192 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 182 Tm
0 -10 TD
(                            If neither of those two options are specified then ) Tj
1 0 0 1 10 172 Tm
0 -10 TD
(                            pdf_inc.p is run persistently.  All procedural calls ) Tj
1 0 0 1 10 162 Tm
0 -10 TD
(                            must now contain IN h_PDFinc.  eg:) Tj
1 0 0 1 10 152 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 142 Tm
0 -10 TD
(                            RUN pdf_text IN h_PDFinc \("Spdf","Sample"\).) Tj
1 0 0 1 10 132 Tm
0 -10 TD
() Tj
1 0 0 1 10 122 Tm
0 -10 TD
(  12/05/03    G Campbell    Added code per Peter Kiss \(peter.kiss@paradyme.be\)) Tj
1 0 0 1 10 112 Tm
0 -10 TD
(                            that checks for pre-existance of PDFinclude Handle.) Tj
1 0 0 1 10 102 Tm
0 -10 TD
(  ) Tj
1 0 0 1 10 92 Tm
0 -10 TD
(              G Campbell    Added function declarations for:) Tj
1 0 0 1 10 82 Tm
0 -10 TD
(                              ) Tj
1 0 0 1 10 72 Tm
0 -10 TD
(                              pdf_FillRed) Tj
1 0 0 1 10 62 Tm
0 -10 TD
(                              pdf_FillGreen) Tj
1 0 0 1 10 52 Tm
0 -10 TD
(                              pdf_FillBlue) Tj
1 0 0 1 10 42 Tm
0 -10 TD
(                              pdf_LastProcedure) Tj
1 0 0 1 10 32 Tm
0 -10 TD
1 0 0 1 10 25 Tm
/BF1 6 Tf
0 0 0 rg 
/BF1 6 Tf
0 0 0 rg
1 0 0 1 10 10 Tm
(Produced by PDFinclude) Tj
/BF1 10 Tf
0 .7 0 rg 
ET
endstream
endobj
31 0 obj
6444
endobj
32 0 obj
<<
/Type /Page
/Parent 3 0 R
/Resources 19 0 R
/Contents 33 0 R
/Rotate 0
/MediaBox [ 0 0 612 792]
/Annots [ 
 ]
>>
endobj
33 0 obj
<<
/Length 34 0 R
>>
stream
q
1 w
5 5 602 782 re
S
Q
BT
/BF1 10 Tf
 1 0 0 1 10 742 Tm
0 .7 0 rg 
/BF1 10 Tf
() Tj
1 0 0 1 10 742 Tm
0 -10 TD
(  12/17/03    G Campbell    Added function declaration for pdf_PageRotate) Tj
1 0 0 1 10 732 Tm
0 -10 TD
(          ) Tj
1 0 0 1 10 722 Tm
0 -10 TD
(                            This function returns the current Rotation angle) Tj
1 0 0 1 10 712 Tm
0 -10 TD
(                            for pages.) Tj
1 0 0 1 10 702 Tm
0 -10 TD
() Tj
1 0 0 1 10 692 Tm
0 -10 TD
(  12/18/03    G Campbell    Added function declaration for pdf_get_parameter) Tj
1 0 0 1 10 682 Tm
0 -10 TD
(  ) Tj
1 0 0 1 10 672 Tm
0 -10 TD
(                            This function allows you to determine the value) Tj
1 0 0 1 10 662 Tm
0 -10 TD
(                            of a TT_pdf_param \(parameter\).  In future this) Tj
1 0 0 1 10 652 Tm
0 -10 TD
(                            will replace a lot of other function calls. For) Tj
1 0 0 1 10 642 Tm
0 -10 TD
(                            example, pdf_Page, pdf_TopMargin, pdf_LeftMargin.) Tj
1 0 0 1 10 632 Tm
0 -10 TD
(                            ) Tj
1 0 0 1 10 622 Tm
0 -10 TD
(                            This one function will return all values.  This will) Tj
1 0 0 1 10 612 Tm
0 -10 TD
(                            also be used in conjunction with the procedure ) Tj
1 0 0 1 10 602 Tm
0 -10 TD
(                            pdf_set_parameter \(used to set the values\).) Tj
1 0 0 1 10 592 Tm
0 -10 TD
() Tj
1 0 0 1 10 582 Tm
0 -10 TD
(  01/08/04    G Campbell    Separated the function declaration into their own) Tj
1 0 0 1 10 572 Tm
0 -10 TD
(                            include file called pdf_func.i.  This is so that) Tj
1 0 0 1 10 562 Tm
0 -10 TD
(                            the functions can be declared in multiple places.) Tj
1 0 0 1 10 552 Tm
0 -10 TD
(                            For example, pdf_func.i is used here but it is also) Tj
1 0 0 1 10 542 Tm
0 -10 TD
(                            used in pdftools.p.) Tj
1 0 0 1 10 532 Tm
0 -10 TD
() Tj
1 0 0 1 10 522 Tm
0 -10 TD
(  06/03/04    G Campbell    renamed pdfextract.i to pdfglobal.i) Tj
1 0 0 1 10 512 Tm
0 -10 TD
() Tj
1 0 0 1 10 502 Tm
0 -10 TD
(  07/06/05    G Campbell    removed h_PDFinc variable -- added into pdfglobal.i) Tj
1 0 0 1 10 492 Tm
0 -10 TD
(******************************************************************************/) Tj
0 0 0 rg 
() Tj
1 0 0 1 10 482 Tm
0 -10 TD
() Tj
1 0 0 1 10 472 Tm
0 -10 TD
() Tj
1 0 1 rg 
({ pdfglobal.i ) Tj
0 .7 .7 rg 
("NEW SHARED") Tj
0 0 0 rg 
1 0 1 rg 
(}) Tj
0 0 0 rg 
() Tj
1 0 0 1 10 462 Tm
0 -10 TD
() Tj
1 0 0 1 10 452 Tm
0 -10 TD
() Tj
0 .7 0 rg 
(/*) Tj
( PEKI - Find the handle if on the air */) Tj
0 0 0 rg 
() Tj
1 0 0 1 10 442 Tm
0 -10 TD
() Tj
1 0 1 rg 
(&IF) Tj
0 0 0 rg 
( ) Tj
0 .7 .7 rg 
(") Tj
1 0 1 rg 
1 0 1 rg 
({1}) Tj
0 0 0 rg 
(" = ") Tj
0 0 0 rg 
(THIS-PROCEDURE) Tj
0 .7 .7 rg 
(" &THEN) Tj
1 0 0 1 10 432 Tm
0 -10 TD
(    h_PDFinc = ) Tj
0 0 .7 rg 
(THIS-PROCEDURE) Tj
0 0 0 rg 
(. ) Tj
1 0 0 1 10 422 Tm
0 -10 TD
() Tj
1 0 0 1 10 412 Tm
0 -10 TD
(    ) Tj
0 0 .7 rg 
(DO) Tj
0 0 0 rg 
0 0 .7 rg 
( WHILE) Tj
0 0 0 rg 
0 0 .7 rg 
( VALID-HANDLE) Tj
0 0 0 rg 
(\(h_PDFinc\)) Tj
1 0 0 1 10 402 Tm
0 -10 TD
(    ) Tj
0 0 .7 rg 
(AND) Tj
0 0 0 rg 
( h_PDFinc:) Tj
0 0 .7 rg 
(PRIVATE-DATA) Tj
0 0 0 rg 
0 0 .7 rg 
( <>) Tj
0 0 0 rg 
( ) Tj
0 .7 .7 rg 
('Persistent PDFinc') Tj
0 0 0 rg 
(:) Tj
1 0 0 1 10 392 Tm
0 -10 TD
(       h_PDFinc = h_PDFinc:) Tj
0 0 .7 rg 
(NEXT-SIBLING) Tj
0 0 0 rg 
(.) Tj
1 0 0 1 10 382 Tm
0 -10 TD
(    ) Tj
0 0 .7 rg 
(END) Tj
0 0 0 rg 
(.) Tj
1 0 0 1 10 372 Tm
0 -10 TD
() Tj
1 0 0 1 10 362 Tm
0 -10 TD
() Tj
1 0 1 rg 
(&ELSEIF) Tj
0 0 0 rg 
( ) Tj
0 .7 .7 rg 
(") Tj
1 0 1 rg 
1 0 1 rg 
({1}) Tj
0 0 0 rg 
(" = ") Tj
0 0 0 rg 
(" ) Tj
1 0 1 rg 
(&THEN) Tj
0 0 0 rg 
() Tj
1 0 0 1 10 352 Tm
0 -10 TD
(     h_PDFinc = ) Tj
0 0 .7 rg 
(SESSION) Tj
0 0 0 rg 
(:) Tj
0 0 .7 rg 
(FIRST-PROCEDURE) Tj
0 0 0 rg 
(.) Tj
1 0 0 1 10 342 Tm
0 -10 TD
() Tj
1 0 0 1 10 332 Tm
0 -10 TD
(     ) Tj
0 0 .7 rg 
(DO) Tj
0 0 0 rg 
0 0 .7 rg 
( WHILE) Tj
0 0 0 rg 
0 0 .7 rg 
( VALID-HANDLE) Tj
0 0 0 rg 
(\(h_PDFinc\)) Tj
1 0 0 1 10 322 Tm
0 -10 TD
(     ) Tj
0 0 .7 rg 
(AND) Tj
0 0 0 rg 
( h_PDFinc:) Tj
0 0 .7 rg 
(PRIVATE-DATA) Tj
0 0 0 rg 
0 0 .7 rg 
( <>) Tj
0 0 0 rg 
( ) Tj
0 .7 .7 rg 
('Persistent PDFinc') Tj
0 0 0 rg 
(:) Tj
1 0 0 1 10 312 Tm
0 -10 TD
(         h_PDFinc = h_PDFinc:) Tj
0 0 .7 rg 
(NEXT-SIBLING) Tj
0 0 0 rg 
(.) Tj
1 0 0 1 10 302 Tm
0 -10 TD
(     ) Tj
0 0 .7 rg 
(END) Tj
0 0 0 rg 
(.) Tj
1 0 0 1 10 292 Tm
0 -10 TD
() Tj
1 0 1 rg 
(&ENDIF) Tj
0 0 0 rg 
() Tj
1 0 0 1 10 282 Tm
0 -10 TD
() Tj
1 0 0 1 10 272 Tm
0 -10 TD
() Tj
0 0 .7 rg 
(IF) Tj
0 0 0 rg 
0 0 .7 rg 
( NOT) Tj
0 0 0 rg 
0 0 .7 rg 
( VALID-HANDLE) Tj
0 0 0 rg 
(\(h_PDFinc\) ) Tj
0 0 .7 rg 
(THEN) Tj
0 0 0 rg 
0 0 .7 rg 
( DO) Tj
0 0 0 rg 
(:) Tj
1 0 0 1 10 262 Tm
0 -10 TD
() Tj
1 0 0 1 10 252 Tm
0 -10 TD
(  ) Tj
0 .7 0 rg 
(/*) Tj
( Call pdf_inc.p Persistenly */) Tj
0 0 0 rg 
() Tj
1 0 0 1 10 242 Tm
0 -10 TD
(  ) Tj
0 0 .7 rg 
(RUN) Tj
0 0 0 rg 
( ) Tj
1 0 1 rg 
1 0 1 rg 
({&PDFDIR}) Tj
0 0 0 rg 
(pdf_inc.p ) Tj
0 0 .7 rg 
(PERSISTENT) Tj
0 0 0 rg 
( ) Tj
1 0 0 1 10 232 Tm
0 -10 TD
(                ) Tj
0 0 .7 rg 
(SET) Tj
0 0 0 rg 
( h_PDFinc.) Tj
1 0 0 1 10 222 Tm
0 -10 TD
() Tj
1 0 0 1 10 212 Tm
0 -10 TD
(  ) Tj
0 0 .7 rg 
(ASSIGN) Tj
0 0 0 rg 
( h_PDFinc:) Tj
0 0 .7 rg 
(PRIVATE-DATA) Tj
0 0 0 rg 
( = ) Tj
0 .7 .7 rg 
('Persistent PDFinc') Tj
0 0 0 rg 
(.) Tj
1 0 0 1 10 202 Tm
0 -10 TD
() Tj
1 0 0 1 10 192 Tm
0 -10 TD
(  ) Tj
1 0 1 rg 
(&IF) Tj
0 0 0 rg 
( ) Tj
0 0 .7 rg 
(NOT) Tj
0 0 0 rg 
0 0 .7 rg 
( PROVERSION) Tj
0 0 0 rg 
0 0 .7 rg 
( BEGINS) Tj
0 0 0 rg 
( ) Tj
0 .7 .7 rg 
("8") Tj
0 0 0 rg 
( ) Tj
1 0 1 rg 
(&THEN) Tj
0 0 0 rg 
() Tj
1 0 0 1 10 182 Tm
0 -10 TD
(    ) Tj
1 0 1 rg 
(&IF) Tj
0 0 0 rg 
( ) Tj
0 .7 .7 rg 
(") Tj
1 0 1 rg 
1 0 1 rg 
({1}) Tj
0 0 0 rg 
(" = ") Tj
0 0 0 rg 
(THIS-PROCEDURE) Tj
0 .7 .7 rg 
(" &THEN) Tj
1 0 0 1 10 172 Tm
0 -10 TD
(      ) Tj
0 0 .7 rg 
(IF) Tj
0 0 0 rg 
0 0 .7 rg 
( VALID-HANDLE) Tj
0 0 0 rg 
(\() Tj
0 0 .7 rg 
(THIS-PROCEDURE) Tj
0 0 0 rg 
(\) ) Tj
0 0 .7 rg 
(THEN) Tj
0 0 0 rg 
0 0 .7 rg 
( THIS-PROCEDURE) Tj
0 0 0 rg 
(:) Tj
0 0 .7 rg 
(ADD-SUPER-PROCEDURE) Tj
0 0 0 rg 
(\(h_PDFinc\).) Tj
1 0 0 1 10 162 Tm
0 -10 TD
(    ) Tj
1 0 1 rg 
(&ELSEIF) Tj
0 0 0 rg 
( ) Tj
0 .7 .7 rg 
(") Tj
1 0 1 rg 
1 0 1 rg 
({1}) Tj
0 0 0 rg 
(" = ") Tj
0 0 0 rg 
(" ) Tj
1 0 1 rg 
(&THEN) Tj
0 0 0 rg 
() Tj
1 0 0 1 10 152 Tm
0 -10 TD
(      ) Tj
0 0 .7 rg 
(IF) Tj
0 0 0 rg 
0 0 .7 rg 
( VALID-HANDLE) Tj
0 0 0 rg 
(\() Tj
0 0 .7 rg 
(SESSION) Tj
0 0 0 rg 
(\) ) Tj
0 0 .7 rg 
(THEN) Tj
0 0 0 rg 
0 0 .7 rg 
( SESSION) Tj
0 0 0 rg 
(:) Tj
0 0 .7 rg 
(ADD-SUPER-PROCEDURE) Tj
0 0 0 rg 
(\(h_PDFinc\).) Tj
1 0 0 1 10 142 Tm
0 -10 TD
(    ) Tj
1 0 1 rg 
(&ENDIF) Tj
0 0 0 rg 
() Tj
1 0 0 1 10 132 Tm
0 -10 TD
(  ) Tj
1 0 1 rg 
(&ENDIF) Tj
0 0 0 rg 
() Tj
1 0 0 1 10 122 Tm
0 -10 TD
() Tj
0 0 .7 rg 
(END) Tj
0 0 0 rg 
(. ) Tj
0 .7 0 rg 
(/*) Tj
( If Not a valid Handle to PDFinclude */) Tj
0 0 0 rg 
() Tj
1 0 0 1 10 112 Tm
0 -10 TD
() Tj
1 0 0 1 10 102 Tm
0 -10 TD
() Tj
0 .7 0 rg 
(/*) Tj
( ------------------------ Pre-Define Functions -------------------------- */) Tj
0 0 0 rg 
() Tj
1 0 0 1 10 92 Tm
0 -10 TD
() Tj
1 0 0 1 10 82 Tm
0 -10 TD
() Tj
1 0 1 rg 
1 0 1 rg 
({ pdf_func.i h_PDFinc}) Tj
0 0 0 rg 
() Tj
1 0 0 1 10 72 Tm
0 -10 TD
() Tj
1 0 0 1 10 62 Tm
0 -10 TD
() Tj
0 .7 0 rg 
(/*) Tj
( --------------------- End of Pre-Define Functions ---------------------- */) Tj
0 0 0 rg 
() Tj
1 0 0 1 10 52 Tm
0 -10 TD
1 0 0 1 10 25 Tm
/BF1 6 Tf
0 0 0 rg 
/BF1 6 Tf
0 0 0 rg
1 0 0 1 10 10 Tm
(Produced by PDFinclude) Tj
/BF1 10 Tf
0 0 0 rg 
ET
endstream
endobj
34 0 obj
7707
endobj
2 0 obj
<<
/Type /Catalog
/Pages 3 0 R
/PageMode /UseNone
/PageLayout /SinglePage
/ViewerPreferences <<  >>
>>
endobj
3 0 obj
<<
/Type /Pages
/Count 5
/Kids [ 
20 0 R 
23 0 R 
26 0 R 
29 0 R 
32 0 R 
]
>>
endobj
xref
0 35
0000000000 65535 f
0000000017 00000 n
0000036833 00000 n
0000036960 00000 n
0000000159 00000 n
0000000233 00000 n
0000000337 00000 n
0000000449 00000 n
0000000558 00000 n
0000000674 00000 n
0000000780 00000 n
0000000895 00000 n
0000001007 00000 n
0000001126 00000 n
0000001235 00000 n
0000001346 00000 n
0000001455 00000 n
0000001570 00000 n
0000001707 00000 n
0000001850 00000 n
0000002132 00000 n
0000002276 00000 n
0000008465 00000 n
0000008489 00000 n
0000008633 00000 n
0000015247 00000 n
0000015271 00000 n
0000015415 00000 n
0000022200 00000 n
0000022224 00000 n
0000022368 00000 n
0000028873 00000 n
0000028897 00000 n
0000029041 00000 n
0000036809 00000 n
trailer
<<
/Size 35
/Root 2 0 R
/Info 1 0 R
>>
startxref
37067
%%EOF
